name: build

on:
  release:
    types:
      - published

jobs:
  build:
    name: build wheel
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        python-version: [ '3.6', '3.x' ]
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: load cached Python installation
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key: build-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'setup.*') }}-${{ hashFiles('pyterraintree/cython/*', 'modules/*') }}
      - name: install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: install dependencies on Linux
        if: steps.cache.outputs.cache-hit != 'true' && matrix.os == 'ubuntu-latest'
        run: sudo apt install libeigen3-dev libboost-all-dev
      - name: install dependencies on Windows
        if: steps.cache.outputs.cache-hit != 'true' && matrix.os == 'windows-latest'
        run: choco install eigen
      - name: install Boost on Windows
        if: steps.cache.outputs.cache-hit != 'true' && matrix.os == 'windows-latest'
        uses: MarkusJx/install-boost@v2.2.0
        with:
          boost_version: 1.78.0
      - name: build extension
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install .
      - name: build wheel
        run: pip wheel . -w dist --no-deps
      - name: save wheel
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./dist/*.whl
  package:
    name: package source
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: install Python
        uses: actions/setup-python@v2
      - name: install dependencies
        run: pip install dunamai
      - name: package source
        run: python setup.py sdist
      - name: save source package
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./dist/*.tar.gz
  deploy:
    name: publish to PyPI
    needs: [ build_wheels, build_sdist ]
    runs-on: ubuntu-latest
    steps:
      - name: retrieve wheel(s) and source
        uses: actions/download-artifact@v2
        with:
          name: build
          path: dist
      - name: upload wheel(s) and source
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
